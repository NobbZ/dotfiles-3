name: flake-build

on:
  push:
    # branches:
    #   - master
  workflow_dispatch:

jobs:
  check_flake:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Install nix
      uses: ./.github/actions/install-nix
    - name: Flake check
      run: nix flake check

  generate_matrix:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.gen_packages.outputs.packages }}
      checks: ${{ steps.gen_checks.outputs.checks }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Install nix
      uses: ./.github/actions/install-nix
    - id: gen_packages
      name: Generate package matrix
      run: nix run .#generate_matrix

  build_flake:
    runs-on: ubuntu-latest
    needs: [generate_matrix, check_flake]
    if: ${{ needs.generate_matrix.outputs.packages != '[]' && needs.generate_matrix.outputs.packages != '' }}
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix:
        package: ${{ fromJson(needs.generate_matrix.outputs.packages )}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Install nix
      uses: ./.github/actions/install-nix
    - name: Set up cachix
      uses: cachix/cachix-action@master
      with:
        name: viperml
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
        pathsToPush: result
    - name: Build output
      run: nix build .#${{ matrix.package }}

  build_extra:
    runs-on: ubuntu-latest
    needs: [build_flake]
    strategy:
      fail-fast: false
      matrix:
        output: [
          homeConfigurations.ayats@viperSL4.config.home.activationPackage
        ]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Install nix
      uses: ./.github/actions/install-nix
    - name: Set up cachix
      uses: cachix/cachix-action@master
      with:
        name: viperml
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
        pathsToPush: result
    - name: Build output
      run: nix build .#${{ matrix.output }}
