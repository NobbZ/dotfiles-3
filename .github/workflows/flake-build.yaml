# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Build flake

concurrency: build

on:
  pull_request:
  push:
    branches-ignore:
      - 'update-*'
  workflow_dispatch:

jobs:
  generate_matrix:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.gen_packages.outputs.packages }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Install nix
      uses: ./.github/actions/install-nix
    - id: gen_packages
      name: Generate package matrix
      run: echo "packages=$(nix run .#dotfiles-build-matrix)" >> $GITHUB_OUTPUT

  build_flake:
    runs-on: ubuntu-latest
    needs: [generate_matrix]
    if: ${{ needs.generate_matrix.outputs.packages != '[]' && needs.generate_matrix.outputs.packages != '' }}
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix:
        package: ${{ fromJson(needs.generate_matrix.outputs.packages )}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Install nix
      uses: ./.github/actions/install-nix
    - name: Set up cachix
      uses: cachix/cachix-action@master
      with:
        name: viperml
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
        pathsToPush: result
    - name: Build output
      run: nix build .#${{ matrix.package }} -L

  # build_extra:
  #   runs-on: ubuntu-latest
  #   needs: [build_flake]
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       output: [
  #         homeConfigurations.ayats@viperSL4.config.home.activationPackage
  #       ]
  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v3
  #   - name: Install nix
  #     uses: ./.github/actions/install-nix
  #   - name: Set up cachix
  #     uses: cachix/cachix-action@master
  #     with:
  #       name: viperml
  #       authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
  #       pathsToPush: result
  #   - name: Build output
  #     run: nix build .#${{ matrix.output }} -L
